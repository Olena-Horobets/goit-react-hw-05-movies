{"version":3,"sources":["utils/constants.js","services/serviceAPI.js","services/serviceSlugify.js","images/fallbackPhoto.jpg","components/MovieCard/MovieCard.js","components/MovieCard/MovieCard.module.css","pages/MoviesPage/MoviesPage.module.css","pages/MoviesPage/MoviesPage.js"],"names":["BASE_URL","KEY","IMG_URL","STATUS","IDLE","PENDING","RESOLVED","REJECTED","fetchWithErrorHandling","a","url","config","fetch","response","status","json","Promise","reject","Error","fetchPopular","period","fetchMovieByQuery","query","fetchMovieById","movieId","fetchMovieCast","fetchMovieReviews","getSlug","movie","slugify","title","name","id","lower","strict","parseSlug","slug","match","MovieCard","className","s","movieCard","movieTitle","boxEffect","movieImg","src","poster_path","fallbackPhoto","alt","module","exports","MoviesPage","location","useLocation","useState","setQuery","movies","setMovies","useEffect","trim","length","then","data","results","catch","err","console","log","input","value","onChange","e","target","autoComplete","autoFocus","map","el","to","pathname","state","from","keyWord","searchRequest"],"mappings":"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","file":"static/js/movies-page.6defe18d.chunk.js","sourcesContent":["export const BASE_URL = 'https://api.themoviedb.org/3/';\nexport const KEY = '6f7abc44fc4837d6e8737cb8523ac04e';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w342';\n\nexport const STATUS = {\n  IDLE: 'idle',\n  PENDING: 'pending',\n  RESOLVED: 'resolved',\n  REJECTED: 'rejected',\n};\n","import { BASE_URL, KEY } from '../utils/constants';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n\n  return response.status === 200\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchPopular({ period }) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}trending/all/${period}?api_key=${KEY}`,\n  );\n}\n\nexport function fetchMovieByQuery({ query }) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${query}`,\n  );\n}\n\nexport function fetchMovieById({ movieId }) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}?api_key=${KEY}&language=en-US`,\n  );\n}\n\nexport function fetchMovieCast({ movieId }) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${KEY}&language=en-US`,\n  );\n}\n\nexport function fetchMovieReviews({ movieId }) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`,\n  );\n}\n","import slugify from 'slugify';\n\nexport const getSlug = movie => {\n  return slugify(`${movie.title || movie.name} ${movie.id}`, {\n    lower: true,\n    strict: true,\n  });\n};\n\nexport const parseSlug = slug => {\n  return slug.match(/[a-zA-Z0-9]+$/)[0];\n};\n","export default __webpack_public_path__ + \"static/media/fallbackPhoto.a42b9e03.jpg\";","import s from 'components/MovieCard/MovieCard.module.css';\nimport fallbackPhoto from '../../images/fallbackPhoto.jpg';\n\nimport { IMG_URL } from '../../utils/constants';\n\nfunction MovieCard({ movie }) {\n  return (\n    <div className={s.movieCard}>\n      <h3 className={s.movieTitle}>{movie.title || movie.name}</h3>\n      <div className={s.boxEffect}></div>\n      <img\n        className={s.movieImg}\n        src={\n          movie.poster_path\n            ? `${IMG_URL}${movie.poster_path}`\n            : `${fallbackPhoto}`\n        }\n        alt={movie.title}\n      ></img>\n    </div>\n  );\n}\n\nexport { MovieCard };\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"movieCard\":\"MovieCard_movieCard__1pa4u\",\"movieTitle\":\"MovieCard_movieTitle__3mkN5\",\"boxEffect\":\"MovieCard_boxEffect__A8fsj\",\"movieImg\":\"MovieCard_movieImg__1jUOk\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"input\":\"MoviesPage_input__25Fvj\",\"searchRequest\":\"MoviesPage_searchRequest__2RhXm\"};","import s from './MoviesPage.module.css';\n\nimport { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router';\nimport { Link } from 'react-router-dom';\n\nimport { fetchMovieByQuery } from '../../services/serviceAPI';\nimport { getSlug } from '../../services/serviceSlugify';\n\nimport { MovieCard } from '../../components/MovieCard/MovieCard';\n\nfunction MoviesPage() {\n  const location = useLocation();\n\n  const [query, setQuery] = useState('');\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    if (!query.trim().length) {\n      setMovies([]);\n      return;\n    }\n\n    fetchMovieByQuery({ query })\n      .then(data => setMovies(data.results))\n      .catch(err => console.log(err));\n  }, [query]);\n\n  return (\n    <>\n      <input\n        className={s.input}\n        value={query}\n        onChange={e => {\n          setQuery(e.target.value);\n        }}\n        autoComplete=\"off\"\n        autoFocus\n      ></input>\n      {movies.length ? (\n        <ul className=\"gallery\">\n          {movies.map(el => (\n            <li className=\"galleryItem\" key={el.id}>\n              <Link\n                className=\"galleryLink\"\n                to={{\n                  pathname: `/movies/${getSlug(el)}`,\n                  state: { from: location, keyWord: 'search' },\n                }}\n              >\n                <MovieCard movie={el} />\n              </Link>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p className={s.searchRequest}>...enter your query</p>\n      )}\n    </>\n  );\n}\n\nexport default MoviesPage;\n"],"sourceRoot":""}