{"version":3,"sources":["services/serviceAPI.js","components/MovieCard/MovieCard.js","pages/HomePage/HomePage.js"],"names":["BASE_URL","KEY","IMG_URL","fetchWithErrorHandling","a","url","config","fetch","response","status","json","Promise","reject","Error","fetchPopular","period","fetchMovieByQuery","query","fetchMovieById","movieId","onError","fetchMovieCast","fetchMovieReviews","MovieCard","movie","className","title","name","src","poster_path","alt","HomePage","location","useLocation","useState","movies","setMovies","useEffect","fetchMoviesAPI","then","data","results","catch","err","console","log","map","el","to","pathname","string","id","slugify","lower","strict","state","from"],"mappings":"kXAAMA,EAAW,gCACXC,EAAM,mCACCC,EAAU,kC,SAERC,I,2EAAf,4CAAAC,EAAA,6DAAsCC,EAAtC,+BAA4C,GAAIC,EAAhD,+BAAyD,GAAzD,SACyBC,MAAMF,EAAKC,GADpC,UAG6B,OAFrBE,EADR,QAGkBC,OAHlB,iCAIYD,EAASE,OAJrB,gDAKMC,QAAQC,OAAO,IAAIC,MAAM,cAL/B,mF,wBAQO,SAASC,EAAT,GAAmC,IAAXC,EAAU,EAAVA,OAC7B,OAAOZ,EAAuB,GAAD,OACxBH,EADwB,wBACAe,EADA,oBACkBd,IAI1C,SAASe,EAAT,GAAuC,IAAVC,EAAS,EAATA,MAClC,OAAOd,EAAuB,GAAD,OACxBH,EADwB,gCACQC,EADR,4DAC+DgB,IAIvF,SAASC,EAAT,GAA+C,IAArBC,EAAoB,EAApBA,QAAoB,EAAXC,QACxC,OAAOjB,EAAuB,GAAD,OACxBH,EADwB,iBACPmB,EADO,oBACYlB,EADZ,oBAKxB,SAASoB,EAAT,GAAsC,IAAZF,EAAW,EAAXA,QAC/B,OAAOhB,EAAuB,GAAD,OACxBH,EADwB,iBACPmB,EADO,4BACoBlB,EADpB,oBAKxB,SAASqB,EAAT,GAAyC,IAAZH,EAAW,EAAXA,QAClC,OAAOhB,EAAuB,GAAD,OACxBH,EADwB,iBACPmB,EADO,4BACoBlB,EADpB,6B,gCCrC/B,2DAIA,SAASsB,EAAT,GAA+B,IAAVC,EAAS,EAATA,MACnB,OACE,sBAAKC,UAAU,YAAf,UACE,6BAAKD,EAAME,OAASF,EAAMG,OAC1B,qBACEF,UAAU,WACVG,IAAG,UAAK1B,KAAL,OAAesB,EAAMK,aACxBC,IAAKN,EAAME,a,qICyCJK,UApCf,WACE,IAAMC,EAAWC,cACjB,EAA4BC,mBAAS,IAArC,mBAAOC,EAAP,KAAeC,EAAf,KASA,OAPAC,qBAAU,WACRC,IACgB,CAAEvB,OAAQ,QACvBwB,MAAK,SAAAC,GAAI,OAAIJ,EAAUI,EAAKC,YAC5BC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC3B,IAGD,gCACE,oBAAIlB,UAAU,QAAd,sBACCU,GACC,oBAAIV,UAAU,UAAd,SACGU,EAAOW,KAAI,SAAAC,GAAE,OACZ,6BACE,cAAC,IAAD,CACEC,GAAI,CACFC,SAAS,WAAD,QA3BVC,EA2B+B,GAAD,OACvBH,EAAGrB,OAASqB,EAAGpB,KADQ,YACAoB,EAAGI,IA3BxCC,IAAQF,EAAQ,CACrBG,OAAO,EACPC,QAAQ,MA2BMC,MAAO,CAAEC,KAAMxB,IALnB,SAQE,cAAC,IAAD,CAAWR,MAAOuB,OATbA,EAAGI,IAxBR,IAAAD","file":"static/js/home-page.fc6855c8.chunk.js","sourcesContent":["const BASE_URL = 'https://api.themoviedb.org/3/';\nconst KEY = '6f7abc44fc4837d6e8737cb8523ac04e';\nexport const IMG_URL = 'https://image.tmdb.org/t/p/w342';\n\nasync function fetchWithErrorHandling(url = '', config = {}) {\n  const response = await fetch(url, config);\n\n  return response.status === 200\n    ? await response.json()\n    : Promise.reject(new Error('Not found'));\n}\n\nexport function fetchPopular({ period }) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}trending/all/${period}?api_key=${KEY}`,\n  );\n}\n\nexport function fetchMovieByQuery({ query }) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}search/movie?api_key=${KEY}&language=en-US&page=1&include_adult=false&query=${query}`,\n  );\n}\n\nexport function fetchMovieById({ movieId, onError }) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}?api_key=${KEY}&language=en-US`,\n  );\n}\n\nexport function fetchMovieCast({ movieId }) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}/credits?api_key=${KEY}&language=en-US`,\n  );\n}\n\nexport function fetchMovieReviews({ movieId }) {\n  return fetchWithErrorHandling(\n    `${BASE_URL}movie/${movieId}/reviews?api_key=${KEY}&language=en-US&page=1`,\n  );\n}\n","import 'components/MovieCard/MovieCard.css';\n\nimport { IMG_URL } from '../../services/serviceAPI';\n\nfunction MovieCard({ movie }) {\n  return (\n    <div className=\"movieCard\">\n      <h3>{movie.title || movie.name}</h3>\n      <img\n        className=\"movieImg\"\n        src={`${IMG_URL}${movie.poster_path}`}\n        alt={movie.title}\n      ></img>\n    </div>\n  );\n}\n\nexport { MovieCard };\n","import slugify from 'slugify';\n\nimport { useState, useEffect } from 'react';\nimport { useLocation } from 'react-router';\nimport { Link } from 'react-router-dom';\nimport * as fetchMoviesAPI from '../../services/serviceAPI';\n\nimport { MovieCard } from '../../components/MovieCard/MovieCard';\n\nconst getSlug = string => {\n  return slugify(string, {\n    lower: true,\n    strict: true,\n  });\n};\n\nfunction HomePage() {\n  const location = useLocation();\n  const [movies, setMovies] = useState([]);\n\n  useEffect(() => {\n    fetchMoviesAPI\n      .fetchPopular({ period: 'day' })\n      .then(data => setMovies(data.results))\n      .catch(err => console.log(err));\n  }, []);\n\n  return (\n    <div>\n      <h2 className=\"title\">HOMEVIEW</h2>\n      {movies && (\n        <ul className=\"gallery\">\n          {movies.map(el => (\n            <li key={el.id}>\n              <Link\n                to={{\n                  pathname: `/movies/${getSlug(\n                    `${el.title || el.name} ${el.id}`,\n                  )}`,\n                  state: { from: location },\n                }}\n              >\n                <MovieCard movie={el} />\n              </Link>\n            </li>\n          ))}\n        </ul>\n      )}\n    </div>\n  );\n}\n\nexport default HomePage;\n"],"sourceRoot":""}