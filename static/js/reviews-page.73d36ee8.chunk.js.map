{"version":3,"sources":["components/Reviews/Reviews.js"],"names":["Reviews","slug","useParams","movieId","parseSlug","useState","reviews","setReviews","useEffect","fetchMovieReviews","then","data","results","catch","err","console","log","length","map","el","author","content","id"],"mappings":"iMAoCeA,UA9Bf,WACE,IAAQC,EAASC,cAATD,KACFE,EAAUC,YAAUH,GAE1B,EAA8BI,mBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KAQA,OANAC,qBAAU,WACRC,YAAkB,CAAEN,YACjBO,MAAK,SAAAC,GAAI,OAAIJ,EAAWI,EAAKC,YAC7BC,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,QAC3B,CAACX,IAGF,mCACGG,GAAWA,EAAQW,OAClB,6BACGX,EAAQY,KAAI,SAAAC,GAAE,OACb,+BACE,6BAAKA,EAAGC,SACR,4BAAID,EAAGE,YAFAF,EAAGG,SAOhB","file":"static/js/reviews-page.73d36ee8.chunk.js","sourcesContent":["import { useState, useEffect } from 'react';\nimport { useParams } from 'react-router-dom';\n\nimport { fetchMovieReviews } from '../../services/serviceAPI';\nimport { parseSlug } from '../../services/serviceSlugify';\n\nfunction Reviews() {\n  const { slug } = useParams();\n  const movieId = parseSlug(slug);\n\n  const [reviews, setReviews] = useState([]);\n\n  useEffect(() => {\n    fetchMovieReviews({ movieId })\n      .then(data => setReviews(data.results))\n      .catch(err => console.log(err));\n  }, [movieId]);\n\n  return (\n    <>\n      {reviews && reviews.length ? (\n        <ul>\n          {reviews.map(el => (\n            <li key={el.id}>\n              <h4>{el.author}</h4>\n              <p>{el.content}</p>\n            </li>\n          ))}\n        </ul>\n      ) : (\n        <p>no reviews are given yet</p>\n      )}\n    </>\n  );\n}\n\nexport default Reviews;\n"],"sourceRoot":""}